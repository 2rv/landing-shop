import * as React from 'react';
import { RouteComponentProps } from 'react-router-dom';
import { LastLocationType } from './LastLocationContext';
interface Props extends RouteComponentProps {
    watchOnlyPathname: boolean;
    children: React.ReactNode;
}
export declare const getLastLocation: () => LastLocationType;
export declare const setLastLocation: (nextLastLocation: LastLocationType) => void;
declare const _default: React.ComponentClass<Pick<Pick<Pick<Pick<Props, "children" | "history" | "location" | "match" | "staticContext">, "children" | "history" | "location" | "match" | "staticContext"> & Pick<{
    watchOnlyPathname?: boolean | undefined;
}, never> & Pick<{
    watchOnlyPathname?: boolean | undefined;
}, "watchOnlyPathname">, "watchOnlyPathname" | "children" | "history" | "location" | "match" | "staticContext">, "watchOnlyPathname" | "children">, any>;
export default _default;
